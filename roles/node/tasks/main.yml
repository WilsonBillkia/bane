---

- name: Set authorized key
  ansible.posix.authorized_key:
    user: "{{ ansible_user }}"
    state: present
    key: "{{ lookup('file', '{{ ansible_user }}.pub') }}"

- name: wheel group present
  become: yes
  group: 
    name: wheel
    state: present

# todo - use sudoers.d dir instead to enable unattended os upgrades 
- name: wheel group passwordless sudo
  become: yes
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s

- name: "{{ ansible_user }} group present"
  become: yes
  ansible.builtin.group:
    name: "{{ ansible_user }}"
    state: present

- name: "{{ ansible_user }} user in wheel"
  become: yes
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    home: /home/{{ ansible_user }}
    comment: big guy 4 u
    shell: /bin/bash
    groups: wheel

- name: "{{ chainlink_user }} group present"
  become: yes
  ansible.builtin.group:
    name: "{{ chainlink_user }}"
    state: present

- name: "{{ chainlink_user }} user in wheel"
  become: yes
  ansible.builtin.user:
    name: "{{ chainlink_user }}"
    home: /home/{{ chainlink_user }}
    comment: account for running chainlink
    shell: /bin/bash
    groups: wheel

- name: "{{ ansible_user }} home directory owned by {{ ansible_user }}"
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  become: yes


- name: "{{ chainlink_user }} home directory owned by {{ chainlink_user }}"
  ansible.builtin.file:
    path: "/home/{{ chainlink_user }}"
    state: directory
    owner: "{{ chainlink_user }}"
    group: "{{ chainlink_user }}"
  become: yes

- name:  tools and ansible requirements in place - screen, tree, tcpdump, make, htop, build essential, libssldev from apt
  become: yes
  apt:
    pkg: 
    - screen
    - tcpdump
    - htop
    - tree
    - build-essential
    - libssl-dev  
    - unzip
...
