---
- hosts: linkies
################### BUILD FIREWALL ####################
  tasks: 
  - name: Iptables - allow all TCP OUT on port 6688 for CHAINLINK
    iptables: 
      chain: INPUT
      protocol: tcp
      destination_port: 6688
      jump: ACCEPT
    become: yes
  - name: Iptables - allow all TCP OUT on port 6688 for CHAINLINK
    iptables:
      chain: OUTPUT
      protocol: tcp
      source_port: 6688
      jump: ACCEPT
    become: yes
  - name: Iptables - allow all UDP OUT on port 6688 for CHAINLINK
    iptables:
      chain: INPUT
      protocol: udp
      destination_port: 6688
      jump: ACCEPT
    become: yes
  - name: Iptables - allow all UDP OUT on port 6688 for CHAINLINK
    iptables:
      chain: OUTPUT
      protocol: udp
      source_port: 6688
      jump: ACCEPT
    become: yes
  - name: Iptables - allow TCP IN on port 22 for SSH
    iptables:
      chain: INPUT
      protocol: tcp
      destination_port: 22
      ctstate: NEW,ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow TCP replies on port 22 for SSH
    iptables:
      chain: OUTPUT
      protocol: tcp
      source_port: 22
      ctstate: ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow DNS TCP traffic OUT
    iptables:
      chain: OUTPUT
      protocol: tcp
      destination_port: 53
      ctstate: NEW,ESTABLISHED
      jump: ACCEPT
    become: yes

  - name: Iptables - allow DNS TCP replies IN in response
    iptables:
      chain: INPUT
      protocol: tcp
      source_port: 53
      ctstate: ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow DNS UDP traffic OUT
    iptables:
      chain: OUTPUT
      protocol: udp
      destination_port: 53
      ctstate: NEW,ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow DNS UDP replies IN in response
    iptables:
      chain: INPUT
      protocol: udp
      source_port: 53
      ctstate: ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow HTTP TCP OUT for UPDATES, GITHUB, etc
    iptables:
      chain: OUTPUT
      protocol: tcp
      destination_port: 80
      ctstate: NEW,ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow HTTP TCP back IN for UPDATES, GITHUB, etc
    iptables:
      chain: INPUT
      protocol: tcp
      source_port: 80
      ctstate: ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow HTTPS TCP OUT for UPDATES and GITHUB
    iptables:
      chain: OUTPUT
      protocol: tcp
      destination_port: 443
      ctstate: NEW,ESTABLISHED
      jump: ACCEPT
    become: yes
  - name: Iptables - allow HTTPS TCP back IN for UPDATES and GITHUB
    iptables:
      chain: INPUT
      protocol: tcp
      source_port: 443
      ctstate: ESTABLISHED
      jump: ACCEPT
  - name: Iptables - allow ALL IN on LOOPBACK INTERFACE
    iptables:
      chain: INPUT
      in_interface: lo
      jump: ACCEPT
    become: yes
  - name: Iptables - allow ONLY SOURCE 127.0.0.1 on LOOPBACK INTERFACE to prevent spoofing
    iptables:
      chain: INPUT
      in_interface: lo
      source: ! 127.0.0.1
      jump: REJECT
    become: yes
  - name: Iptables - DROP ALL other traffic on default INPUT chain
    iptables:
      chain: INPUT
      policy: DROP
    become: yes
  - name: Iptables - DROP ALL other traffic on default OUTPUT chain
    iptables:
      chain: OUTPUT
      policy: DROP
    become: yes
  - name: Iptables - DROP ALL traffic from default FORWARDING chain
    iptables:
      chain: FORWARD
      policy: DROP
    become: yes
  - name: Install iptables-persistent to run rules at boot in future
    apt: 
      name: iptables-persistent
    become: yes
  - name: Save the iptables configuration 
    shell: 'sudo iptables-save > /etc/iptables/rules.v4' 
    become: yes
################### MANAGEMENT TOOLS ####################
  - name: Update repositories cache and install screen from apt - screen makes node management over ssh viable
    apt:
      name: screen
      update_cache: yes
    become: true
  - name: Install tcpdump from apt - Useful to monitor traffic ad hoc / intrusion detection
    apt: 
      name: tcpdump
    become: true
  - name: Install htop from apt - info rich and lets us know whats running on our box at a glance if we are concerned with malware or intrusion
    apt: 
      name: htop
    become: true
...
